Implementing the simulation with multithreading adds some restrictions.

So the idea is to divide the map in 3 or 4 groups of sectors.
Two or more sectors of the same group can be executed concurrently.
To avoind concurrency issues I created RESTRICTION NUMBER 1:
  If two units are in different sectors of the same group, they should be farther away than MAX_INFLUENCE_DISTANCE * 2
  A unit can not affect other unit or tile that is farther away than MAX_INFLUENCE_DISTANCE 
  A unit can not act based on the status of another unit or tile that is farther away than MAX_INFLUENCE_DISTANCE

This restriction should be enougn... but:

In order to make pathfinding algorithims less expensive, when a scan PF finds a goal, it saves that goal in the unit memory.
But if the goal gets 2 far away then I could break restriction number 1, cause the unit would be acting depending on another unit that is very far away.

RESTRICTION NUMBER 2:
Units can not move more than 1 tile per turn.
Units forget their goals, if their were set by a scan and the goal gets to far away. (Before the goal gets beyond MAX_INFLUENCE_DISTANCE)
The forget check takes into account how much time passed since the last forget check. (Remember that units can be slow and not get executed every turn)

if(time_since_last_check + recorded_goal_distance < MAX_INFLUENCE_DISTANCE) {
  time_since_last_check = time
  recorded_goal_distance = goal_distance
}